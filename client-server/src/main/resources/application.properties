server.port=8080
spring.application.name=client-server

# Logging
logging.level.org.springframework.web=info
logging.level.org.springframework.security=info
logging.level.org.springframework.security.oauth2=info
logging.level.com.example.oauth2.client=info

# OAuth2 Client Configuration
spring.security.oauth2.client.registration.products-client-oidc.provider=spring
spring.security.oauth2.client.registration.products-client-oidc.client-id=products-client
spring.security.oauth2.client.registration.products-client-oidc.client-secret=secret
spring.security.oauth2.client.registration.products-client-oidc.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.products-client-oidc.redirect-uri=http://127.0.0.1:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.products-client-oidc.scope=openid,profile,read,write
spring.security.oauth2.client.registration.products-client-oidc.client-name=products-client-oidc
spring.security.oauth2.client.registration.products-client-authorization-code.provider=spring
spring.security.oauth2.client.registration.products-client-authorization-code.client-id=products-client
spring.security.oauth2.client.registration.products-client-authorization-code.client-secret=secret
spring.security.oauth2.client.registration.products-client-authorization-code.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.products-client-authorization-code.redirect-uri=http://127.0.0.1:8080/authorized
spring.security.oauth2.client.registration.products-client-authorization-code.scope=openid,profile,read,write
spring.security.oauth2.client.registration.products-client-authorization-code.client-name=products-client-authorization-code
spring.security.oauth2.client.provider.spring.issuer-uri=${CLIENT_PROVIDER_ISSUER_URI:http://localhost:9000}